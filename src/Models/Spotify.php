<?php

namespace Bot\Models;

use Bot\Helpers\SessionHandler;
use Bot\Helpers\TokenHandler;

class Spotify
{
    private TokenHandler $tokenHandler;

    public function __construct()
    {
        $this->tokenHandler = new TokenHandler($_ENV['API_URL'], $_ENV['SECURE_TOKEN']);
    }

    public function checkLimit($amount)
    {
        if ($amount > 24) {
            $amount = 24;
        }
        else if (!$amount) {
            $amount = 24;
        }
        return $amount;
    }

    private function getTokens($user_id): bool|array
    {
        return $this->tokenHandler->getTokens($user_id);
    }

    public function getLatestSongs($user_id, $amount): object|array|null
    {
        $amount = $this->checkLimit($amount);

        $api = (new SessionHandler())->setSession($user_id);
        return $api->getMySavedTracks([
            'limit' => $amount,
        ]);
    }

    public function getMe($user_id): object|array|null
    {
        $api = (new SessionHandler())->setSession($user_id);
        return $api->me();
    }

    public function getCurrentSong($user_id): object|array|null
    {
        $tokens = $this->getTokens($user_id);
        if (!$tokens) {
            return null;
        }
        $api = (new SessionHandler())->setSession($user_id);
        if ($api->getMyCurrentTrack() == null) {
            return null;
        }
        return $api->getMyCurrentTrack();
    }

    public function getTopSongs($user_id, $amount): object|array|null
    {
        $amount = $this->checkLimit($amount);
        $api = (new SessionHandler())->setSession($user_id);
        $topTracks = $api->getMyTop('tracks', [
            'limit' => $amount,
        ]);
        return $topTracks;
    }

    public function generatePlaylist($user_id, $startDate, $endDate): object|array
    {
        $api = (new SessionHandler())->setSession($user_id);
        $me = $api->me();
        $tracks = $api->getMySavedTracks([
            'limit' => 10,
        ]);
        $allTracks = [];
        while ($tracks->next) {
            foreach ($tracks->items as $item) {
                $track = $item->track;
                $trackDate = strtotime($item->added_at);
                if ($trackDate  < $startDate) {
                    echo "Track date is less than start date\n";
                    $allTracks[] = $track;
                    $tracks->next = false;
                    break 2;
                }
                echo $track->name . "\n";
                $allTracks[] = $track;
            }
            $tracks = $api->getMySavedTracks([
                'limit' => 10,
                'offset' => $tracks->offset + 10,
            ]);
        }
        foreach ($tracks->items as $item) {
            $track = $item->track;
            $allTracks[] = $track;
        }

        $playlist = $api->createPlaylist([
            'name' => 'Spotify Stats Playlist',
            'description' => 'Playlist generated by Discord Bot',
        ]);
        $api->addPlaylistTracks($playlist->id, $allTracks);
        return $playlist;
    }
}
